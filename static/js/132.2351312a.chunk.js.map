{"version":3,"file":"static/js/132.2351312a.chunk.js","mappings":"0RAYaA,EAAkB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACjD,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,UAAC,EAAAC,SAAD,YACE,UAAC,EAAAC,KAAD,WACGR,EADH,MACiB,SAAC,EAAAS,OAAD,UAASR,QAG1B,SAAC,EAAAS,UAAD,CACEC,KAAK,SACLC,SAAUT,EACVU,QAzBsB,WAC1BT,GAAc,GAEdC,GAASS,EAAAA,EAAAA,eAAc,CAAEf,GAAAA,KACtBgB,SACAC,MAAK,SAAAC,GAAQ,OACZC,EAAAA,GAAAA,QAAA,mBAA0BD,EAASE,KAAnC,8BADY,IAGbC,OAAM,kBACLF,EAAAA,GAAAA,MAAY,0DADP,IAGNG,SAAQ,WACPjB,GAAc,EACf,GACJ,EAQG,SAKGD,GAAa,SAAC,EAAAmB,eAAD,IAAqB,aAI1C,C,yLC7CYf,EAAWgB,EAAAA,EAAAA,GAAH,uPAYRf,EAAOe,EAAAA,EAAAA,KAAH,6CAIJd,EAASc,EAAAA,EAAAA,KAAH,6CAINb,EAAYa,EAAAA,EAAAA,OAAH,sa","sources":["components/ContactListItem/ContactListItem.jsx","components/ContactListItem/ContactListItem.styled.jsx"],"sourcesContent":["// Libs\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n// Redux operations\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n// react components\nimport { CenteredLoader } from 'components/Loaders/Loaders';\n// Styled components\nimport { ListItem, Text, Number, RemoveBtn } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, contactName, contactNumber }) => {\n  const [isRemoving, setIsRemoving] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = () => {\n    setIsRemoving(true);\n\n    dispatch(deleteContact({ id }))\n      .unwrap()\n      .then(response =>\n        toast.success(`Contact \"${response.name}\" is successfully removed.`)\n      )\n      .catch(() =>\n        toast.error('Oops... Something went wrong :( Please try again later.')\n      )\n      .finally(() => {\n        setIsRemoving(false);\n      });\n  };\n\n  return (\n    <ListItem>\n      <Text>\n        {contactName}: <Number>{contactNumber}</Number>\n      </Text>\n\n      <RemoveBtn\n        type=\"button\"\n        disabled={isRemoving}\n        onClick={handleRemoveContact}\n      >\n        {isRemoving ? <CenteredLoader /> : 'Remove'}\n      </RemoveBtn>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  height: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #505050;\n  padding: 0 0 0 16px;\n  border-radius: 16px;\n  background-color: #ffffff;\n  overflow: hidden;\n`;\n\nexport const Text = styled.span`\n  font-weight: 500;\n`;\n\nexport const Number = styled.span`\n  font-weight: 400;\n`;\n\nexport const RemoveBtn = styled.button`\n  padding: 0 16px 0;\n  height: 100%;\n  min-width: 100px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: #ffffff;\n  border: none;\n  background-color: #ffc800;\n  text-shadow: 1px 1px 2px #505050;\n  transition: background-color 250ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #e7b500;\n  }\n\n  &:disabled {\n    background-color: #505050;\n  }\n`;\n"],"names":["ContactListItem","id","contactName","contactNumber","useState","isRemoving","setIsRemoving","dispatch","useDispatch","ListItem","Text","Number","RemoveBtn","type","disabled","onClick","deleteContact","unwrap","then","response","toast","name","catch","finally","CenteredLoader","styled"],"sourceRoot":""}