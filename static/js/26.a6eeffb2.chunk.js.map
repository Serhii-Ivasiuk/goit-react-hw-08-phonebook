{"version":3,"file":"static/js/26.a6eeffb2.chunk.js","mappings":"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","sources":["components/Common/FormsComponents.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Filter/Filter.jsx","components/Filter/Filter.styled.jsx","pages/ContactsPage/ContactsPage.jsx","pages/ContactsPage/ContactsPage.styled.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js"],"sourcesContent":["// Libs\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  padding: 16px;\n  border: 1px solid #505050;\n  border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const InputHeading = styled.span`\n  padding-left: 16px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  height: 32px;\n  padding: 16px;\n  font-size: 16px;\n  color: #505050;\n  border: none;\n  border-radius: 8px;\n  outline: ${({ validate }) =>\n    validate ? '1px solid #fc8181' : '1px solid #505050'};\n  outline-offset: -1px;\n\n  &:focus {\n    outline: ${({ validate }) =>\n      validate ? '2px solid #fc8181' : '2px solid #505050'};\n    outline-offset: -2px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  height: 32px;\n  padding: 4px 16px;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-color: #008000;\n  color: #ffffff;\n  text-shadow: 1px 1px 2px #505050;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #006f00;\n  }\n\n  :disabled {\n    cursor: initial;\n    background-color: #505050;\n  }\n`;\n\nexport const ValidationMessage = styled.span`\n  padding: 0 16px;\n  color: #fc8181;\n`;\n","// Libs\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n// Redux selectors\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n// Redux operations\nimport { addContact } from 'redux/contacts/contactsOperations';\n// Styled components\nimport {\n  Form,\n  Label,\n  InputHeading,\n  Input,\n  SubmitBtn,\n  ValidationMessage,\n} from 'components/Common/FormsComponents.styled';\n\nconst validationSchema = (() => {\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n  const numberRegExp =\n    /^\\+?\\d{1,4}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\n  return Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required')\n      .min(3, 'Name must be at least 3 letters long.')\n      .matches(\n        nameRegExp,\n        'Name may contain only letters, apostrophe, dash and spaces.'\n      ),\n\n    number: Yup.string()\n      .required('Number is required')\n      .matches(\n        numberRegExp,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with \"+\".'\n      ),\n  });\n})();\n\nconst formSettings = {\n  defaultValues: { name: '', number: '' },\n  mode: 'onTouched',\n  resolver: yupResolver(validationSchema),\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const {\n    formState: { errors, isDirty, isValid },\n    register,\n    handleSubmit,\n    reset,\n  } = useForm(formSettings);\n\n  const onSubmit = formData => {\n    const isExistName = contacts.some(item => item.name === formData.name);\n    const isExistNumber = contacts.find(\n      item => item.number === formData.number\n    );\n\n    if (isExistName) {\n      return toast.info(\n        `Contact with name \"${formData.name}\" is already in contacts`\n      );\n    } else if (isExistNumber) {\n      return toast.info(\n        `Number \"${formData.number}\" is already in contacts with name \"${isExistNumber.name}\"`\n      );\n    }\n\n    dispatch(addContact(formData));\n\n    reset();\n\n    document.activeElement.blur();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        <InputHeading>Name</InputHeading>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          validate={errors.name}\n          {...register('name')}\n        />\n        {errors.name && (\n          <ValidationMessage>{errors.name?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <Label>\n        <InputHeading>Number</InputHeading>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          validate={errors.number}\n          {...register('number')}\n        />\n        {errors.number && (\n          <ValidationMessage>{errors.number?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <SubmitBtn type=\"submit\" disabled={!isValid || !isDirty}>\n        Add contact\n      </SubmitBtn>\n    </Form>\n  );\n};\n","// Libs\nimport { useSelector } from 'react-redux';\n// React components\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n// Redux selectors\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport { getFilter } from 'redux/filter/filterSelectors';\n// Styled components\nimport { InfoMessage, List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredAndSortedContacts = contacts\n    .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <>\n      {filteredAndSortedContacts.length === 0 && (\n        <InfoMessage>\n          Contacts not found. Please, try to change your request.\n        </InfoMessage>\n      )}\n\n      <List>\n        {filteredAndSortedContacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem\n              key={id}\n              id={id}\n              contactName={name}\n              contactNumber={number}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InfoMessage = styled.p`\n  font-weight: 700;\n  text-align: center;\n  color: #505050;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n","// Libs\nimport PropTypes from 'prop-types';\n// Redux operations\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n// Styled components\nimport { ListItem, Text, Number, RemoveBtn } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nexport const ContactListItem = ({ id, contactName, contactNumber }) => {\n  const [isRemoving, setIsRemoving] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = () => {\n    setIsRemoving(true);\n\n    dispatch(deleteContact({ id, contactName })).finally(() => {\n      setIsRemoving(false);\n    });\n  };\n\n  return (\n    <ListItem>\n      <Text>\n        {contactName}: <Number>{contactNumber}</Number>\n      </Text>\n\n      <RemoveBtn\n        type=\"button\"\n        disabled={isRemoving}\n        onClick={handleRemoveContact}\n      >\n        Remove\n      </RemoveBtn>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  height: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #505050;\n  padding: 0 0 0 16px;\n  border-radius: 16px;\n  background-color: #ffffff;\n  overflow: hidden;\n`;\n\nexport const Text = styled.span`\n  font-weight: 500;\n`;\n\nexport const Number = styled.span`\n  font-weight: 400;\n`;\n\nexport const RemoveBtn = styled.button`\n  padding: 0 16px 0;\n  height: 100%;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: #ffffff;\n  border: none;\n  background-color: #ffc800;\n  text-shadow: 1px 1px 2px #505050;\n  transition: background-color 250ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #e7b500;\n  }\n\n  &:disabled {\n    background-color: #505050;\n  }\n`;\n","// Libs\nimport { useDispatch, useSelector } from 'react-redux';\n// Redux selectors\nimport { getFilter } from 'redux/filter/filterSelectors';\n// Redux actions\nimport { filterContacts } from 'redux/filter/filterSlice';\n// Styled components\nimport { Label, InputHeading, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterInput = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    <Label>\n      <InputHeading>Find contacts by name</InputHeading>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        title=\"Please enter a name to find your contacts\"\n        value={filter}\n        onChange={handleFilterInput}\n      />\n    </Label>\n  );\n};\n","// Libs\nimport styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const InputHeading = styled.span`\n  margin-bottom: 4px;\n  font-weight: 700;\n  padding: 0 16px;\n`;\n\nexport const Input = styled.input`\n  height: 32px;\n  padding: 0 16px;\n  font-size: 16px;\n  color: #505050;\n  border: 1px solid #505050;\n  border-radius: 8px;\n`;\n","// Libs\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// React components\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n// Redux selectors\nimport {\n  getContacts,\n  getError,\n  getIsLoading,\n} from 'redux/contacts/contactsSelectors';\n// Redux operations\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n// Styled components\nimport {\n  ContactsPageWrap,\n  Section,\n  MainTitle,\n  SectionTitle,\n  ContactsWrapper,\n  InfoMessage,\n  ErrorMessage,\n} from './ContactsPage.styled';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsPageWrap>\n      <Section>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n      </Section>\n\n      <Section>\n        <SectionTitle>Contacts</SectionTitle>\n        <ContactsWrapper>\n          {contacts.length !== 0 && (\n            <>\n              <Filter />\n              <ContactList />\n            </>\n          )}\n\n          {loading && <InfoMessage>Loading...</InfoMessage>}\n\n          {error && contacts.length === 0 && (\n            <ErrorMessage>{error}</ErrorMessage>\n          )}\n\n          {!loading && !error && contacts.length === 0 && (\n            <InfoMessage>\n              There is no contacts yet. Use the form above to add your first\n              contact.\n            </InfoMessage>\n          )}\n        </ContactsWrapper>\n      </Section>\n    </ContactsPageWrap>\n  );\n};\n","// Libs\nimport styled from '@emotion/styled';\n\nexport const ContactsPageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  height: 100%;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const MainTitle = styled.h1`\n  padding-left: 32px;\n`;\n\nexport const SectionTitle = styled.h2`\n  padding-left: 32px;\n`;\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  border: 1px solid #505050;\n  padding: 16px;\n  border-radius: 12px;\n`;\n\nexport const InfoMessage = styled.p`\n  font-weight: 700;\n  text-align: center;\n  color: #505050;\n`;\n\nexport const ErrorMessage = styled.p`\n  font-weight: 700;\n  text-align: center;\n  color: #fc8181;\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","export const getFilter = state => state.filter.filter;\n"],"names":["Form","styled","Label","InputHeading","Input","validate","SubmitBtn","ValidationMessage","validationSchema","Yup","shape","name","required","min","matches","number","formSettings","defaultValues","mode","resolver","yupResolver","ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","useForm","formState","errors","isDirty","isValid","register","handleSubmit","reset","onSubmit","formData","isExistName","some","item","isExistNumber","find","toast","addContact","document","activeElement","blur","type","message","disabled","ContactList","filter","getFilter","filteredAndSortedContacts","toLowerCase","includes","sort","a","b","localeCompare","length","InfoMessage","List","map","id","ContactListItem","contactName","contactNumber","useState","isRemoving","setIsRemoving","ListItem","Text","Number","RemoveBtn","onClick","deleteContact","finally","Filter","title","value","onChange","event","filterContacts","target","ContactsPage","loading","getIsLoading","error","getError","useEffect","fetchContacts","ContactsPageWrap","Section","MainTitle","SectionTitle","ContactsWrapper","ErrorMessage","state","items","isLoading"],"sourceRoot":""}