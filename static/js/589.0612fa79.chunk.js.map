{"version":3,"file":"static/js/589.0612fa79.chunk.js","mappings":"gYAGaA,EAAOC,EAAAA,EAAAA,KAAH,qWAcJC,EAAQD,EAAAA,EAAAA,MAAH,kGAOLE,EAAeF,EAAAA,EAAAA,KAAH,oEAKZG,EAAQH,EAAAA,EAAAA,MAAH,sPAOL,qBAAGI,SACD,oBAAsB,mBADxB,IAKE,qBAAGA,SACD,oBAAsB,mBADxB,IAMFC,EAAYL,EAAAA,EAAAA,OAAH,odAyBTM,EAAoBN,EAAAA,EAAAA,KAAH,8D,+LClDxBO,EAKGC,EAAAA,KAAaC,MAAM,CACxBC,KAAMF,EAAAA,KACHG,SAAS,qBACTC,IAAI,EAAG,yCACVC,MAAOL,EAAAA,KACJG,SAAS,sBACTG,QATH,uJASwB,gCACxBC,SAAUP,EAAAA,KACPG,SAAS,yBACTG,QAXkB,oDAajB,gGAKFE,EAAe,CACnBC,cAAe,CAAEP,KAAM,GAAIQ,OAAQ,GAAIH,SAAU,IACjDI,KAAM,YACNC,UAAUC,EAAAA,EAAAA,GAAYd,IAGXe,EAAmB,WAAO,IAAD,MAC9BC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,iBACxBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQZ,GALZ,IACEa,UAAaC,EADf,EACeA,OAAQC,EADvB,EACuBA,QAASC,EADhC,EACgCA,QAC9BC,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAeF,OACE,UAAC,EAAApC,KAAD,CAAMqC,SAAUF,GAbD,SAAAG,GACfX,GAASY,EAAAA,EAAAA,cAAaD,IACnBE,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,gBACWD,EAASE,KAAKjC,KADzB,kCAGAyB,GACD,IACAS,OAAM,kBAAMF,EAAAA,GAAAA,MAAY,wCAAlB,GACV,IAGC,WACE,UAAC,EAAAzC,MAAD,YACE,SAAC,EAAAC,aAAD,oBACA,SAAC,EAAAC,OAAD,QACE0C,KAAK,OACLnC,KAAK,OACLN,SAAU0B,EAAOpB,MACbuB,EAAS,UAGdH,EAAOpB,OACN,SAAC,EAAAJ,kBAAD,oBAAoBwB,EAAOpB,YAA3B,aAAoB,EAAaoC,cAIrC,UAAC,EAAA7C,MAAD,YACE,SAAC,EAAAC,aAAD,qBACA,SAAC,EAAAC,OAAD,QACE0C,KAAK,QACLnC,KAAK,QACLN,SAAU0B,EAAOjB,OACboB,EAAS,WAEdH,EAAOjB,QACN,SAAC,EAAAP,kBAAD,oBAAoBwB,EAAOjB,aAA3B,aAAoB,EAAciC,cAItC,UAAC,EAAA7C,MAAD,YACE,SAAC,EAAAC,aAAD,wBACA,SAAC,EAAAC,OAAD,QACE0C,KAAK,WACLnC,KAAK,WACLN,SAAU0B,EAAOf,UACbkB,EAAS,cAEdH,EAAOf,WACN,SAAC,EAAAT,kBAAD,oBAAoBwB,EAAOf,gBAA3B,aAAoB,EAAiB+B,cAIzC,SAAC,EAAAzC,UAAD,CAAWwC,KAAK,SAASE,UAAWf,IAAYD,GAAWR,EAA3D,SACGA,GAAY,SAAC,EAAAyB,eAAD,IAAqB,eAIzC,C,iGCpHYC,EAAe,WAC1B,OAAO,SAAC,EAAA3B,iBAAD,GACR,C","sources":["components/Common/FormsComponents.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// Libs\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  padding: 16px;\n  border: 1px solid #505050;\n  border-radius: 12px;\n  background-color: #f8f8ff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const InputHeading = styled.span`\n  padding-left: 16px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  height: 32px;\n  padding: 16px;\n  font-size: 16px;\n  color: #505050;\n  border: none;\n  border-radius: 8px;\n  outline: ${({ validate }) =>\n    validate ? '1px solid #fc8181' : '1px solid #505050'};\n  outline-offset: -1px;\n\n  &:focus {\n    outline: ${({ validate }) =>\n      validate ? '2px solid #fc8181' : '2px solid #505050'};\n    outline-offset: -2px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  height: 32px;\n  padding: 4px 12px;\n  min-width: 110px;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-color: #008000;\n  color: #ffffff;\n  text-shadow: 1px 1px 2px #505050;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #006f00;\n  }\n\n  &:disabled {\n    cursor: initial;\n    background-color: #505050;\n  }\n`;\n\nexport const ValidationMessage = styled.span`\n  padding: 0 16px;\n  color: #fc8181;\n`;\n","// Libs\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n// Redux selectors\nimport { selectIsLoading } from 'redux/auth/authSelectors';\n// Redux operations\nimport { registerUser } from 'redux/auth/authOperations';\n// React components\nimport { CenteredLoader } from 'components/Loaders/Loaders';\n// Styled components\nimport {\n  Form,\n  Label,\n  InputHeading,\n  Input,\n  SubmitBtn,\n  ValidationMessage,\n} from 'components/Common/FormsComponents.styled';\n\nconst validationSchema = (() => {\n  const emailRegExp =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const passwordRegExp = /^(?=(?:.*[a-zA-Z]){4})(?=(?:.*\\d){4})[a-zA-Z\\d]+$/;\n\n  return Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required.')\n      .min(3, 'Name must be at least 3 letters long.'),\n    email: Yup.string()\n      .required('Email is required.')\n      .matches(emailRegExp, 'Email must be a valid email.'),\n    password: Yup.string()\n      .required('Password is required.')\n      .matches(\n        passwordRegExp,\n        'Password must be at least 8 characters long and including min 4 letters and min 4 numbers.'\n      ),\n  });\n})();\n\nconst formSettings = {\n  defaultValues: { name: '', number: '', password: '' },\n  mode: 'onTouched',\n  resolver: yupResolver(validationSchema),\n};\n\nexport const RegistrationForm = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const {\n    formState: { errors, isDirty, isValid },\n    register,\n    handleSubmit,\n    reset,\n  } = useForm(formSettings);\n\n  const onSubmit = formData => {\n    dispatch(registerUser(formData))\n      .unwrap()\n      .then(response => {\n        toast.success(\n          `User \"${response.user.name}\" is successfully registered.`\n        );\n        reset();\n      })\n      .catch(() => toast.error('Registration error, please try again.'));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        <InputHeading>Name</InputHeading>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          validate={errors.name}\n          {...register('name')}\n        />\n\n        {errors.name && (\n          <ValidationMessage>{errors.name?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <Label>\n        <InputHeading>Email</InputHeading>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          validate={errors.email}\n          {...register('email')}\n        />\n        {errors.email && (\n          <ValidationMessage>{errors.email?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <Label>\n        <InputHeading>Password</InputHeading>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          validate={errors.password}\n          {...register('password')}\n        />\n        {errors.password && (\n          <ValidationMessage>{errors.password?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <SubmitBtn type=\"submit\" disabled={!isValid || !isDirty || isLoading}>\n        {isLoading ? <CenteredLoader /> : 'Register'}\n      </SubmitBtn>\n    </Form>\n  );\n};\n","// React components\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\n\nexport const RegisterPage = () => {\n  return <RegistrationForm />;\n};\n"],"names":["Form","styled","Label","InputHeading","Input","validate","SubmitBtn","ValidationMessage","validationSchema","Yup","shape","name","required","min","email","matches","password","formSettings","defaultValues","number","mode","resolver","yupResolver","RegistrationForm","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","useForm","formState","errors","isDirty","isValid","register","handleSubmit","reset","onSubmit","formData","registerUser","unwrap","then","response","toast","user","catch","type","message","disabled","CenteredLoader","RegisterPage"],"sourceRoot":""}