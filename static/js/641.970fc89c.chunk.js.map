{"version":3,"file":"static/js/641.970fc89c.chunk.js","mappings":"kRAUaA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,aACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,WAErBC,EAA4BL,EAC/BG,QAAO,SAAAG,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASN,EAAOK,cAA5C,IACXE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,KAAKM,cAAcD,EAAEL,KAAjC,IAER,OACE,gCACwC,IAArCF,EAA0BS,SACzB,SAAC,EAAAC,YAAD,uEAKF,SAAC,EAAAC,KAAD,UACGX,EAA0BY,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIX,EAAmB,EAAnBA,KAAMY,EAAa,EAAbA,OAC1C,OACE,SAAC,EAAAC,gBAAD,CAEEF,GAAIA,EACJG,YAAad,EACbe,cAAeH,GAHVD,EAMV,QAIR,C,6HCtCYH,EAAcQ,EAAAA,EAAAA,EAAH,uFAMXP,EAAOO,EAAAA,EAAAA,GAAH,kF,4ICCJH,EAAkB,SAAC,GAAwC,IAAtCF,EAAqC,EAArCA,GAAIG,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACjD,GAAoCE,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,UAAC,EAAAC,SAAD,YACE,UAAC,EAAAC,KAAD,WACGT,EADH,MACiB,SAAC,EAAAU,OAAD,UAAST,QAG1B,SAAC,EAAAU,UAAD,CACEC,KAAK,SACLC,SAAUT,EACVU,QAjBsB,WAC1BT,GAAc,GAEdC,GAASS,EAAAA,EAAAA,eAAc,CAAElB,GAAAA,EAAIG,YAAAA,KAAgBgB,SAAQ,WACnDX,GAAc,EACf,GACF,EAQG,sBASL,C,yLClCYG,EAAWN,EAAAA,EAAAA,GAAH,uPAYRO,EAAOP,EAAAA,EAAAA,KAAH,6CAIJQ,EAASR,EAAAA,EAAAA,KAAH,6CAINS,EAAYT,EAAAA,EAAAA,OAAH,iZ,wICtBf,IAAMrB,EAAc,SAAAoC,GAAK,OAAIA,EAAMtC,SAASuC,KAAnB,EACnBC,EAAe,SAAAF,GAAK,OAAIA,EAAMtC,SAASyC,SAAnB,EACpBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMtC,SAAS2C,KAAnB,C,sECFtB,IAAMvC,EAAY,SAAAkC,GAAK,OAAIA,EAAMnC,OAAOA,MAAjB,C","sources":["components/ContactList/ContactList.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactListItem/ContactListItem.styled.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js"],"sourcesContent":["// Libs\nimport { useSelector } from 'react-redux';\n// React components\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n// Redux selectors\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport { getFilter } from 'redux/filter/filterSelectors';\n// Styled components\nimport { InfoMessage, List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredAndSortedContacts = contacts\n    .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <>\n      {filteredAndSortedContacts.length === 0 && (\n        <InfoMessage>\n          Contacts not found. Please, try to change your request.\n        </InfoMessage>\n      )}\n\n      <List>\n        {filteredAndSortedContacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem\n              key={id}\n              id={id}\n              contactName={name}\n              contactNumber={number}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InfoMessage = styled.p`\n  font-weight: 700;\n  text-align: center;\n  color: #505050;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n","// Libs\nimport PropTypes from 'prop-types';\n// Redux operations\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n// Styled components\nimport { ListItem, Text, Number, RemoveBtn } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nexport const ContactListItem = ({ id, contactName, contactNumber }) => {\n  const [isRemoving, setIsRemoving] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = () => {\n    setIsRemoving(true);\n\n    dispatch(deleteContact({ id, contactName })).finally(() => {\n      setIsRemoving(false);\n    });\n  };\n\n  return (\n    <ListItem>\n      <Text>\n        {contactName}: <Number>{contactNumber}</Number>\n      </Text>\n\n      <RemoveBtn\n        type=\"button\"\n        disabled={isRemoving}\n        onClick={handleRemoveContact}\n      >\n        Remove\n      </RemoveBtn>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  height: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #505050;\n  padding: 0 0 0 16px;\n  border-radius: 16px;\n  background-color: #ffffff;\n  overflow: hidden;\n`;\n\nexport const Text = styled.span`\n  font-weight: 500;\n`;\n\nexport const Number = styled.span`\n  font-weight: 400;\n`;\n\nexport const RemoveBtn = styled.button`\n  padding: 0 16px 0;\n  height: 100%;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: #ffffff;\n  border: none;\n  background-color: #ffc800;\n  text-shadow: 1px 1px 2px #505050;\n  transition: background-color 250ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #e7b500;\n  }\n\n  &:disabled {\n    background-color: #505050;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","export const getFilter = state => state.filter.filter;\n"],"names":["ContactList","contacts","useSelector","getContacts","filter","getFilter","filteredAndSortedContacts","item","name","toLowerCase","includes","sort","a","b","localeCompare","length","InfoMessage","List","map","id","number","ContactListItem","contactName","contactNumber","styled","useState","isRemoving","setIsRemoving","dispatch","useDispatch","ListItem","Text","Number","RemoveBtn","type","disabled","onClick","deleteContact","finally","state","items","getIsLoading","isLoading","getError","error"],"sourceRoot":""}