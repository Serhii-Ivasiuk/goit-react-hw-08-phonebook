{"version":3,"file":"static/js/664.e0cb3354.chunk.js","mappings":"gYAGaA,EAAOC,EAAAA,EAAAA,KAAH,mMAWJC,EAAQD,EAAAA,EAAAA,MAAH,kGAOLE,EAAeF,EAAAA,EAAAA,KAAH,oEAKZG,EAAQH,EAAAA,EAAAA,MAAH,sPAOL,qBAAGI,SACD,oBAAsB,mBADxB,IAKE,qBAAGA,SACD,oBAAsB,mBADxB,IAMFC,EAAYL,EAAAA,EAAAA,OAAH,8bAwBTM,EAAoBN,EAAAA,EAAAA,KAAH,8D,oKClDxBO,EAIGC,EAAAA,KAAaC,MAAM,CACxBC,MAAOF,EAAAA,KACJG,SAAS,sBACTC,QALH,uJAKwB,gCACxBC,SAAUL,EAAAA,KAAaG,SAAS,yBAAyBG,IAAI,KAI3DC,EAAe,CACnBC,cAAe,CAAEN,MAAO,GAAIG,SAAU,IACtCI,KAAM,YACNC,UAAUC,EAAAA,EAAAA,GAAYZ,IAGXa,EAAY,WAAO,IAAD,IACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQR,GALZ,IACES,UAAaC,EADf,EACeA,OAAQC,EADvB,EACuBA,QAASC,EADhC,EACgCA,QAC9BC,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAYF,OACE,UAAC,EAAA/B,KAAD,CAAMgC,SAAUF,GAVD,SAAAG,GACfX,GAASY,EAAAA,EAAAA,OAAMD,IACZE,SACAC,MAAK,SAAAC,GAAQ,OAAIC,EAAAA,GAAAA,QAAA,oBAA2BD,EAASE,KAAKC,KAAzC,KAAJ,IACbC,OAAM,kBAAMH,EAAAA,GAAAA,MAAY,yCAAlB,IAETP,GACD,IAGC,WACE,UAAC,EAAA7B,MAAD,YACE,SAAC,EAAAC,aAAD,qBACA,SAAC,EAAAC,OAAD,QACEsC,KAAK,QACLF,KAAK,QACLnC,SAAUqB,EAAOf,OACbkB,EAAS,WAEdH,EAAOf,QACN,SAAC,EAAAJ,kBAAD,oBAAoBmB,EAAOf,aAA3B,aAAoB,EAAcgC,cAItC,UAAC,EAAAzC,MAAD,YACE,SAAC,EAAAC,aAAD,wBACA,SAAC,EAAAC,OAAD,QACEsC,KAAK,WACLF,KAAK,WACLnC,SAAUqB,EAAOZ,UACbe,EAAS,cAEdH,EAAOZ,WACN,SAAC,EAAAP,kBAAD,oBAAoBmB,EAAOZ,gBAA3B,aAAoB,EAAiB6B,cAIzC,SAAC,EAAArC,UAAD,CAAWoC,KAAK,SAASE,UAAWhB,IAAYD,EAAhD,sBAKL,C,8FCrFYkB,EAAY,WACvB,OAAO,SAAC,EAAAxB,UAAD,GACR,C","sources":["components/Common/FormsComponents.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// Libs\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  padding: 16px;\n  border: 1px solid #505050;\n  border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const InputHeading = styled.span`\n  padding-left: 16px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  height: 32px;\n  padding: 16px;\n  font-size: 16px;\n  color: #505050;\n  border: none;\n  border-radius: 8px;\n  outline: ${({ validate }) =>\n    validate ? '1px solid #fc8181' : '1px solid #505050'};\n  outline-offset: -1px;\n\n  &:focus {\n    outline: ${({ validate }) =>\n      validate ? '2px solid #fc8181' : '2px solid #505050'};\n    outline-offset: -2px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  height: 32px;\n  padding: 4px 16px;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-color: #008000;\n  color: #ffffff;\n  text-shadow: 1px 1px 2px #505050;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #006f00;\n  }\n\n  :disabled {\n    cursor: initial;\n    background-color: #505050;\n  }\n`;\n\nexport const ValidationMessage = styled.span`\n  padding: 0 16px;\n  color: #fc8181;\n`;\n","// Libs\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n// Redux operations\nimport { logIn } from 'redux/auth/authOperations';\n// Styled components\nimport {\n  Form,\n  Label,\n  InputHeading,\n  Input,\n  SubmitBtn,\n  ValidationMessage,\n} from 'components/Common/FormsComponents.styled';\n\nconst validationSchema = (() => {\n  const emailRegExp =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return Yup.object().shape({\n    email: Yup.string()\n      .required('Email is required.')\n      .matches(emailRegExp, 'Email must be a valid email.'),\n    password: Yup.string().required('Password is required.').min(8),\n  });\n})();\n\nconst formSettings = {\n  defaultValues: { email: '', password: '' },\n  mode: 'onTouched',\n  resolver: yupResolver(validationSchema),\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    formState: { errors, isDirty, isValid },\n    register,\n    handleSubmit,\n    reset,\n  } = useForm(formSettings);\n\n  const onSubmit = formData => {\n    dispatch(logIn(formData))\n      .unwrap()\n      .then(response => toast.success(`Wellcome, ${response.user.name}!`))\n      .catch(() => toast.error('Login error - wrong email or password.'));\n\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        <InputHeading>Email</InputHeading>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          validate={errors.email}\n          {...register('email')}\n        />\n        {errors.email && (\n          <ValidationMessage>{errors.email?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <Label>\n        <InputHeading>Password</InputHeading>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          validate={errors.password}\n          {...register('password')}\n        />\n        {errors.password && (\n          <ValidationMessage>{errors.password?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <SubmitBtn type=\"submit\" disabled={!isValid || !isDirty}>\n        Log in\n      </SubmitBtn>\n    </Form>\n  );\n};\n","// React components\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport const LoginPage = () => {\n  return <LoginForm />;\n};\n"],"names":["Form","styled","Label","InputHeading","Input","validate","SubmitBtn","ValidationMessage","validationSchema","Yup","shape","email","required","matches","password","min","formSettings","defaultValues","mode","resolver","yupResolver","LoginForm","dispatch","useDispatch","useForm","formState","errors","isDirty","isValid","register","handleSubmit","reset","onSubmit","formData","logIn","unwrap","then","response","toast","user","name","catch","type","message","disabled","LoginPage"],"sourceRoot":""}