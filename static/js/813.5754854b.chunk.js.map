{"version":3,"file":"static/js/813.5754854b.chunk.js","mappings":"gYAGaA,EAAOC,EAAAA,EAAAA,KAAH,qWAcJC,EAAQD,EAAAA,EAAAA,MAAH,kGAOLE,EAAeF,EAAAA,EAAAA,KAAH,oEAKZG,EAAQH,EAAAA,EAAAA,MAAH,sPAOL,qBAAGI,SACD,oBAAsB,mBADxB,IAKE,qBAAGA,SACD,oBAAsB,mBADxB,IAMFC,EAAYL,EAAAA,EAAAA,OAAH,odAyBTM,EAAoBN,EAAAA,EAAAA,KAAH,8D,0LCjDxBO,EAMGC,EAAAA,KAAaC,MAAM,CACxBC,KAAMF,EAAAA,KACHG,SAAS,oBACTC,IAAI,EAAG,yCACPC,QARH,yHAUI,+DAGJC,OAAQN,EAAAA,KACLG,SAAS,sBACTE,QAbH,6EAeI,qGAKFE,EAAe,CACnBC,cAAe,CAAEN,KAAM,GAAII,OAAQ,IACnCG,KAAM,YACNC,UAAUC,EAAAA,EAAAA,GAAYZ,IAGXa,EAAc,WAAO,IAAD,IACzBC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,gBACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,iBACxBC,GAAWC,EAAAA,EAAAA,MACjB,GAKIC,EAAAA,EAAAA,IAAQb,GALZ,IACEc,UAAaC,EADf,EACeA,OAAQC,EADvB,EACuBA,QAASC,EADhC,EACgCA,QAC9BC,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAgCF,OACE,UAAC,EAAApC,KAAD,CAAMqC,SAAUF,GA9BD,SAAAG,GACf,IAAMC,EAAcjB,EAASkB,MAAK,SAAAC,GAAI,OAAIA,EAAK9B,OAAS2B,EAAS3B,IAA3B,IAChC+B,EAAgBpB,EAASqB,MAC7B,SAAAF,GAAI,OAAIA,EAAK1B,SAAWuB,EAASvB,MAA7B,IAGN,OAAIwB,EACKK,EAAAA,GAAAA,KAAA,6BACiBN,EAAS3B,KAD1B,6BAGE+B,EACFE,EAAAA,GAAAA,KAAA,kBACMN,EAASvB,OADf,+CAC4D2B,EAAc/B,KAD1E,OAKTgB,GAASkB,EAAAA,EAAAA,YAAWP,IACjBQ,SACAC,MAAK,SAAAC,GACJJ,EAAAA,GAAAA,QAAA,mBAA0BI,EAASrC,KAAnC,6BACAyB,GACD,IACAa,OAAM,kBACLL,EAAAA,GAAAA,MAAY,0DADP,SAITM,SAASC,cAAcC,OACxB,IAGC,WACE,UAAC,EAAAlD,MAAD,YACE,SAAC,EAAAC,aAAD,oBACA,SAAC,EAAAC,OAAD,QACEiD,KAAK,OACL1C,KAAK,OACLN,SAAU0B,EAAOpB,MACbuB,EAAS,UAEdH,EAAOpB,OACN,SAAC,EAAAJ,kBAAD,oBAAoBwB,EAAOpB,YAA3B,aAAoB,EAAa2C,cAIrC,UAAC,EAAApD,MAAD,YACE,SAAC,EAAAC,aAAD,sBACA,SAAC,EAAAC,OAAD,QACEiD,KAAK,MACL1C,KAAK,SACLN,SAAU0B,EAAOhB,QACbmB,EAAS,YAEdH,EAAOhB,SACN,SAAC,EAAAR,kBAAD,oBAAoBwB,EAAOhB,cAA3B,aAAoB,EAAeuC,cAIvC,SAAC,EAAAhD,UAAD,CAAW+C,KAAK,SAASE,UAAWtB,IAAYD,GAAWP,EAA3D,SACGO,GAAWP,GAAY,SAAC,EAAA+B,eAAD,IAAqB,kBAIpD,C,iJC9HM,IAAMhC,EAAiB,SAAAiC,GAAK,OAAIA,EAAMnC,SAASoC,KAAnB,EACtBhC,EAAkB,SAAA+B,GAAK,OAAIA,EAAMnC,SAASG,SAAnB,EACvBkC,EAAc,SAAAF,GAAK,OAAIA,EAAMnC,SAASsC,KAAnB,C","sources":["components/Common/FormsComponents.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js"],"sourcesContent":["// Libs\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  padding: 16px;\n  border: 1px solid #505050;\n  border-radius: 12px;\n  background-color: #f8f8ff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const InputHeading = styled.span`\n  padding-left: 16px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  height: 32px;\n  padding: 16px;\n  font-size: 16px;\n  color: #505050;\n  border: none;\n  border-radius: 8px;\n  outline: ${({ validate }) =>\n    validate ? '1px solid #fc8181' : '1px solid #505050'};\n  outline-offset: -1px;\n\n  &:focus {\n    outline: ${({ validate }) =>\n      validate ? '2px solid #fc8181' : '2px solid #505050'};\n    outline-offset: -2px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  height: 32px;\n  padding: 4px 12px;\n  min-width: 110px;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-color: #008000;\n  color: #ffffff;\n  text-shadow: 1px 1px 2px #505050;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #006f00;\n  }\n\n  &:disabled {\n    cursor: initial;\n    background-color: #505050;\n  }\n`;\n\nexport const ValidationMessage = styled.span`\n  padding: 0 16px;\n  color: #fc8181;\n`;\n","// Libs\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\n// Redux selectors\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\n// Redux operations\nimport { addContact } from 'redux/contacts/contactsOperations';\n// React components\nimport { CenteredLoader } from 'components/Loaders/Loaders';\n// Styled components\nimport {\n  Form,\n  Label,\n  InputHeading,\n  Input,\n  SubmitBtn,\n  ValidationMessage,\n} from 'components/Common/FormsComponents.styled';\n\nconst validationSchema = (() => {\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n  const numberRegExp =\n    /^\\+?\\d{1,4}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\n  return Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required')\n      .min(3, 'Name must be at least 3 letters long.')\n      .matches(\n        nameRegExp,\n        'Name may contain only letters, apostrophe, dash and spaces.'\n      ),\n\n    number: Yup.string()\n      .required('Number is required')\n      .matches(\n        numberRegExp,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with \"+\".'\n      ),\n  });\n})();\n\nconst formSettings = {\n  defaultValues: { name: '', number: '' },\n  mode: 'onTouched',\n  resolver: yupResolver(validationSchema),\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const {\n    formState: { errors, isDirty, isValid },\n    register,\n    handleSubmit,\n    reset,\n  } = useForm(formSettings);\n\n  const onSubmit = formData => {\n    const isExistName = contacts.some(item => item.name === formData.name);\n    const isExistNumber = contacts.find(\n      item => item.number === formData.number\n    );\n\n    if (isExistName) {\n      return toast.info(\n        `Contact with name \"${formData.name}\" is already in contacts`\n      );\n    } else if (isExistNumber) {\n      return toast.info(\n        `Number \"${formData.number}\" is already in contacts with name \"${isExistNumber.name}\"`\n      );\n    }\n\n    dispatch(addContact(formData))\n      .unwrap()\n      .then(response => {\n        toast.success(`Contact \"${response.name}\" is successfully added.`);\n        reset();\n      })\n      .catch(() =>\n        toast.error('Oops... Something went wrong :( Please try again later.')\n      );\n\n    document.activeElement.blur();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        <InputHeading>Name</InputHeading>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          validate={errors.name}\n          {...register('name')}\n        />\n        {errors.name && (\n          <ValidationMessage>{errors.name?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <Label>\n        <InputHeading>Number</InputHeading>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          validate={errors.number}\n          {...register('number')}\n        />\n        {errors.number && (\n          <ValidationMessage>{errors.number?.message}</ValidationMessage>\n        )}\n      </Label>\n\n      <SubmitBtn type=\"submit\" disabled={!isValid || !isDirty || isLoading}>\n        {isDirty && isLoading ? <CenteredLoader /> : 'Add contact'}\n      </SubmitBtn>\n    </Form>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n"],"names":["Form","styled","Label","InputHeading","Input","validate","SubmitBtn","ValidationMessage","validationSchema","Yup","shape","name","required","min","matches","number","formSettings","defaultValues","mode","resolver","yupResolver","ContactForm","contacts","useSelector","selectContacts","isLoading","selectIsLoading","dispatch","useDispatch","useForm","formState","errors","isDirty","isValid","register","handleSubmit","reset","onSubmit","formData","isExistName","some","item","isExistNumber","find","toast","addContact","unwrap","then","response","catch","document","activeElement","blur","type","message","disabled","CenteredLoader","state","items","selectError","error"],"sourceRoot":""}